function radial_func(r)
    a0 = 5.29177210903E-11
    rs = 1.0E-10
    Eh = 4.3597447222071E-18
    h = 6.62607015E-34
    c0 = 2.99792458E08
    R_SR_S0 = 3.126E-10
    R_LR_S0 = 11E-10
    N_S0 = 4.53389
    A_SR_S0 = -0.638904880E06
    B_SR_S0 = 0.112005361E09 * (1.0E-10)^N_S0
    --coefficients for long range potential
    C6 = 0.2270032E10 * (1.0E-10)^6
    C8 = 0.7782886E11 * (1.0E-10)^8
    C10 = 0.2868869E13 * (1.0E-10)^10
    C26 = 0.2819810E28 * (1.0E-10)^26
    gamma = 5.317689
    beta = 2.093816 * (1.0E-10)^-1
    Aex = 0.1317785E07 * (1.0E-10)^(-gamma)
    --in nm
    Rm_S0 = 4.209912760E-10


    b_S0 = -0.13
    a_S0 = {-399359.2873, 0.000000000000000000, 0.282069372972346137E7, 0.560425000209256905E6, -0.423962138510562945E7, -0.598558066508841584E7, -0.162613532034769596E7, -0.405142102246254944E7, 0.195237415352729586E8, 0.413823663033582852E8, -0.425543284828921501E9, 0.546674790157210198E8, 0.663194778861331940E10, -0.558341849704095051E10, -0.573987344918535471E11, 0.102010964189156187E12, 0.300040150506311035E12, -0.893187252759830856E12, -0.736002541483347511E12, 0.423130460980355225E13, -0.786351477693491840E12, -0.102470557344862152E14, 0.895155811349267578E13, 0.830355322355692902E13, -0.150102297761234375E14, 0.586778574293387070E13}

	
    
    r = r * rs
    ret = 0
    if r < R_SR_S0 then
        ret = h * c0 * (A_SR_S0 + B_SR_S0 * (1.0 / r)^N_S0)
    elseif r >= R_SR_S0 and r <= R_LR_S0 then
        xi = (r - Rm_S0) / (r + b_S0 * Rm_S0)
        for i=0,25 do
            --print(a_S0[i+1])
            ret = ret + a_S0[i+1] * xi^i
        end
        ret = ret * h * c0
    elseif r > R_LR_S0 then
        Vexch = Aex * r^gamma * math.exp(-beta * r )
        ret =  h * c0 * (-C6 / (r^6) - C8 / (r^8) - C10 / (r^10) - C26 / (r^26) - Vexch)
    end
    return ret
end

--res = radial_func(50)
--print(res)

